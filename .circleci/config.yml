# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      # - image: circleci/php:7.1-jessie-node-browsers
      - image: circleci/php:7.2-fpm-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7
      #   environment:
      #     MYSQL_USER: root
      #     MYSQL_ALLOW_EMPTY_PASSWORD: true
      #     MYSQL_ROOT_PASSWORD: circleci
      #     MYSQL_DATABASE: homestead
      #     MYSQL_USER: homestead
      #     MYSQL_PASSWORD: secret

      # - image: mysql:5.7 # 测试需要依赖 MySQL
      #   environment:
      #     MYSQL_DATABASE: homestead
      #     MYSQL_PASSWORD: secret
      #     MYSQL_ALLOW_EMPTY_PASSWORD: yes

      # - image: redis:2.8.19

      # OPENCC image
      - image: samwutw/opencci:1.0.11

    working_directory: ~/laravel
    steps:
      - checkout

      - run: |
        sudo apt update && sudo apt install zlib1g-dev libsqlite3-dev
        sudo apt install -y mysql-client
        sudo apt install -y mysql-server

      - run: sudo docker-php-ext-install zip pdo_mysql


      - run:
        name: Fix MySQL socket config
        command: |
          sudo sh -c "echo 'pdo_mysql.default_socket=/var/run/mysqld/mysqld.sock' > /usr/local/etc/php/conf.d/pdo.ini"

      - run:
          name: Start database server
          command: |
            sudo service mysql start
            sleep 2
            ps aux | grep mysql

      - run:
          name: Mysql database
          command: |
            mysql  -h 127.0.0.1 -u root -e "create database homestead;"
            mysql  -h 127.0.0.1 -u root -e "CREATE USER 'homestead'@'localhost' IDENTIFIED BY 'secret';";
            mysql  -h 127.0.0.1 -u root -e "GRANT ALL PRIVILEGES ON homestead.* TO 'homestead'@'localhost';";
            mysql  -h 127.0.0.1 -u root -e "FLUSH PRIVILEGES;";

      # Download and cache dependencies

      # composer cache
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor

      # node cache

      - restore_cache:
          keys:
            - node-v3-{{ checksum "package.json" }}
            - node-v3-
      - run: yarn install
      - save_cache:
          key: node-v3-{{ checksum "package.json" }}
          paths:
            - node_modules
            - ~/.yarn

      # prepare the database

      - run: chmod -R 777 storage
      - run: cp .env.example .env
      - run: php artisan key:generate
      - run: php artisan migrate

      # run tests with phpunit or codecept
      - run: ./vendor/bin/phpunit tests/
      # - run: ./vendor/bin/codecept build
      # - run: ./vendor/bin/codecept run --xml result.xml
      # - store_test_results:
      #     path: tests/_output
      # - store_artifacts:
      #     path: tests/_output
